---
- name: Converge
  hosts: all

  pre_tasks:
    - name: install epel repo
      yum:
        name: epel-release
        state: installed
      when: ansible_os_family == 'RedHat'
      tags:
        - molecule-idempotence-notest

    - name: import icinga2 key
      command: "rpm --import https://packages.icinga.com/icinga.key"
      when: ansible_os_family == 'RedHat'
      tags:
        - molecule-idempotence-notest

    - name: install icinga2 repo
      command: "yum install https://packages.icinga.com/epel/icinga-rpm-release-7-latest.noarch.rpm -y"
      when:
        - ansible_os_family == 'RedHat'
        - ansible_facts.distribution_major_version | int is version('7', '=')
      tags:
        - molecule-idempotence-notest

    - name: install icinga2 repo
      command: "yum install https://packages.icinga.com/epel/icinga-rpm-release-8-latest.noarch.rpm -y"
      when:
        - ansible_os_family == 'RedHat'
        - ansible_facts.distribution_major_version | int is version('8', '=')
      tags:
        - molecule-idempotence-notest

    - name: install icinga2 basic packages
      apt:
        name: gnupg
        state: present
        update_cache: true
      when: ansible_os_family == 'Debian'
      tags:
        - molecule-idempotence-notest

    - name: add icinga2 repo key
      apt_key:
        url: "http://packages.icinga.com/icinga.key"
        state: present
      when: ansible_os_family == 'Debian'
      tags:
        - molecule-idempotence-notest

    - name: add icinga2 repository on debian 11
      apt_repository:
        repo: "{{ item }}"
        state: present
        update_cache: true
      with_items:
        - deb http://packages.icinga.com/debian icinga-bullseye main
        - deb-src http://packages.icinga.com/debian icinga-bullseye main
      when:
        - ansible_os_family == 'Debian'
        - ansible_facts.distribution_major_version | int is version('11', '=')
      tags:
        - molecule-idempotence-notest

    - name: install icinga2 build dependencies
      apt:
        pkg: "icinga2"
        state: "build-dep"
        update_cache: true
      when: ansible_os_family == 'Debian'
      tags:
        - molecule-idempotence-notest

    - name: install icinga2 basic packages
      apt:
        name: "icinga2"
        state: "present"
        update_cache: true
      when: ansible_os_family == 'Debian'
      tags:
        - molecule-idempotence-notest

    - name: set name of installation package based on distro
      set_fact:
        icinga_install_plugins:
          - nagios-plugins-all
      when: ansible_os_family == 'Redhat'

    - name: set name of installation package based on distro
      set_fact:
        icinga_install_plugins:
          - monitoring-plugins
      when: ansible_os_family == 'Debian'

  collections:
    - t_systems_mms.ansible_collection_icinga

  roles:
    - icinga_plugins

  post_tasks:
    - name: verify that plugin dir exists
      file:
        path: "{{ icinga2_plugins_pluginsdir }}"
        state: directory
      register: result_plugin_dir

    - name: validate plugin dir exists on system
      assert:
        that:
          - "result_plugin_dir.state == 'directory'"
          - "result_plugin_dir.mode == '0755'"
          - "result_plugin_dir.owner == 'root'"
          - "result_plugin_dir.group == 'root'"

    - name: search for all files in plugins directory
      ansible.builtin.find:
        paths: "{{ icinga2_plugins_pluginsdir }}"
        recurse: yes
        file_type: file
      register: files_in_plugins_dir
      check_mode: no

    - name: validate plugins belongs to the right user for Redhat based systems
      assert:
        that:
          - "item.pw_name == 'icinga'"
          - "item.gr_name == 'icinga'"
      loop: "{{ files_in_plugins_dir.files }}"
      when: ansible_os_family == 'RedHat'

    - name: validate plugins belongs to the right user for Debian based systems
      assert:
        that:
          - "item.pw_name == 'nagios'"
          - "item.gr_name == 'nagios'"
      loop: "{{ files_in_plugins_dir.files }}"
      when: ansible_os_family == 'Debian'

    - name: verify that package is installed for Redhat based systems
      yum:
        name: "{{ icinga_install_plugins }}"
        state: present
      register: result_installation
      when: ansible_os_family == 'RedHat'

    - name: verify that package is installed for Debian based systems
      apt:
        name: "{{ icinga_install_plugins }}"
        state: present
      register: result_installation
      when: ansible_os_family == 'Debian'

    - name: validate package is installed
      assert:
        that:
          - "result_installation.changed == false"
